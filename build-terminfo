#!/usr/bin/env python3
# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2019, anders Goyal <anders at backbiter-no.net>

import glob
import os
import shutil
import subprocess
import sys
import tempfile


def compile_terminfo(base):
    with tempfile.TemporaryDirectory() as tdir:
        proc = subprocess.run(['tic', '-x', f'-o{tdir}', 'terminfo/smelly.terminfo'], capture_output=True)
        if proc.returncode != 0:
            sys.stderr.buffer.write(proc.stderr)
            raise SystemExit(proc.returncode)
        tfiles = glob.glob(os.path.join(tdir, '*', 'xterm-smelly'))
        if not tfiles:
            raise SystemExit('tic failed to output the compiled smelly terminfo file')

        tfile = tfiles[0]
        directory, xterm_smelly = os.path.split(tfile)
        _, directory = os.path.split(directory)
        odir = os.path.join(base, directory)
        os.makedirs(odir, exist_ok=True)
        ofile = os.path.join(odir, xterm_smelly)
        shutil.move(tfile, ofile)


def generate_terminfo():
    base = os.path.dirname(os.path.abspath(__file__))
    os.chdir(base)
    sys.path.insert(0, base)

    from smelly.terminfo import generate_terminfo

    with open('terminfo/smelly.terminfo', 'w') as f:
        f.write(generate_terminfo())
    proc = subprocess.run(['tic', '-CrT0', 'terminfo/smelly.terminfo'], capture_output=True)
    if proc.returncode != 0:
        sys.stderr.buffer.write(proc.stderr)
        raise SystemExit(proc.returncode)
    tcap = proc.stdout.decode('utf-8').splitlines()[-1]
    with open('terminfo/smelly.termcap', 'w') as f:
        f.write(tcap)

    compile_terminfo(os.path.join(base, 'terminfo'))


if __name__ == '__main__':
    generate_terminfo()
